[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "digin"
version = "0.1.0"
description = "AI-powered codebase archaeology tool"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Digin Team", email = "hello@digin.dev"}
]
maintainers = [
    {name = "Digin Team", email = "hello@digin.dev"}
]
keywords = [
    "code-analysis",
    "ai",
    "codebase",
    "archaeology",
    "documentation",
    "claude",
    "gemini"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Documentation",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8.1"
dependencies = [
    "click>=8.0.0",
    "rich>=13.0.0",
    "pathspec>=0.11.0",
    "pydantic>=2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/digin"
Repository = "https://github.com/yourusername/digin"
Documentation = "https://digin.readthedocs.io"
"Bug Tracker" = "https://github.com/yourusername/digin/issues"
Changelog = "https://github.com/yourusername/digin/blob/main/CHANGELOG.md"

[project.scripts]
digin = "src:main"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/config",
    "/docs",
    "/examples",
    "/*.md",
    "/*.toml",
    "/*.txt",
]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["digin"]

# pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "real_ai: marks tests that make real AI CLI calls (requires claude and gemini installed)",
]

# Coverage configuration
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

# MyPy configuration
[tool.mypy]
python_version = "3.8.1"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[dependency-groups]
dev = [
    "black>=24.8.0",
    "flake8>=7.1.2",
    "isort>=5.13.2",
    "mypy>=1.14.1",
    "pre-commit>=3.5.0",
    "pytest>=8.3.5",
    "pytest-cov>=5.0.0",
    "pytest-mock>=3.14.1",
]

# Flake8 configuration (in setup.cfg format, but documented here)
# [flake8]
# max-line-length = 88
# extend-ignore = E203, W503
# exclude = .git,__pycache__,build,dist,.eggs